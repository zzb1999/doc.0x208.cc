(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{202:function(n,t,a){"use strict";a.r(t);var e=a(6),i=Object(e.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h2",{attrs:{id:"基础知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础知识"}},[n._v("#")]),n._v(" 基础知识")]),n._v(" "),a("p",[n._v("通过定义一段动画中的关键点、关键状态来创建动画。Keyframes相比transition对动画过程和细节有更强的控制。")]),n._v(" "),a("p",[n._v("过渡动画是两个状态间的变化，帧动画可以处理动画过程中不同时间的细节变化，不过对过渡动画理解后再学习帧动画会非常容易，也可以把帧动画理解为多个帧之间的过渡动画。")]),n._v(" "),a("h2",{attrs:{id:"关键帧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关键帧"}},[n._v("#")]),n._v(" 关键帧")]),n._v(" "),a("p",[n._v("使用"),a("code",[n._v("@keyframes")]),n._v("规则配置动画中的各个帧。")]),n._v(" "),a("ul",[a("li",[n._v("from表示起始点")]),n._v(" "),a("li",[n._v("to表示终点")]),n._v(" "),a("li",[n._v("可以使用百分数如20%动画运行到20%时间时")])]),n._v(" "),a("h3",{attrs:{id:"基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本使用"}},[n._v("#")]),n._v(" 基本使用")]),n._v(" "),a("p",[n._v("下面使用"),a("code",[n._v("@keyframes")]),n._v("定义了动画叫"),a("code",[n._v("laot")]),n._v("并配置了两个帧动作"),a("code",[n._v("from/to")]),n._v("，然后在div元素中使用"),a("code",[n._v("animation-name")]),n._v("引用了动画并使用"),a("code",[n._v("animation-duration")]),n._v("声明执行三秒。")]),n._v(" "),a("ul",[a("li",[n._v("动画命名不要使用CSS关键字如"),a("code",[n._v("none")])])]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/2020-05-12_153132.gif",alt:""}})]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<style>\n    * {\n        padding: 0;\n        margin: 0;\n    }\n\n    body {\n        background: #2c3e50;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        box-sizing: border-box;\n        width: 100vw;\n        height: 100vh;\n        padding: 80px;\n    }\n\n    main {\n        width: 400px;\n        height: 400px;\n    }\n\n    div {\n        width: 150px;\n        height: 150px;\n        background-color: #fff;\n        border: solid 20px #ddd;\n        animation-name: laot;\n        animation-duration: 2s;\n    }\n    @keyframes laot{\n        from{\n            opacity: 0;\n            transform: scale(.1);\n        }\n        to{\n            opacity: 1;\n            transform: scale(1);\n        }\n    }\n</style>\n<main>\n    <div></div>\n</main>\n")])])]),a("h3",{attrs:{id:"时间点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间点"}},[n._v("#")]),n._v(" 时间点")]),n._v(" "),a("p",[n._v("帧动画需要定义在不同时间执行的动作，开始与结束可以使用"),a("code",[n._v("from/to")]),n._v("或"),a("code",[n._v("0%/100%")]),n._v("声明。")]),n._v(" "),a("ul",[a("li",[n._v("必须添加百分号，25%是正确写法")]),n._v(" "),a("li",[n._v("时间点没有顺序要求，即100%写在25%前也可以")]),n._v(" "),a("li",[n._v("未设置"),a("code",[n._v("0%")]),n._v("与"),a("code",[n._v("100%")]),n._v("时将使用元素原始状态")])]),n._v(" "),a("h3",{attrs:{id:"物体移动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#物体移动"}},[n._v("#")]),n._v(" 物体移动")]),n._v(" "),a("p",[n._v("下面定义不同时间点来让物体元素移动一圈，下例中可以不设置"),a("code",[n._v("from/to")]),n._v("系统将定义为元素初始状态。")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/2020-05-12_154037.gif",alt:""}})]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<style>\n    * {\n        padding: 0;\n        margin: 0;\n    }\n\n    body {\n        background: #2c3e50;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        box-sizing: border-box;\n        width: 100vw;\n        height: 100vh;\n        padding: 80px;\n    }\n\n    main {\n        width: 400px;\n        height: 400px;\n        border: solid 1px silver;\n    }\n\n    div {\n        width: 100px;\n        height: 100px;\n        background-color:#FF9966;\n        animation-name: laot;\n        animation-duration: 2s;\n    }\n    @keyframes laot{\n        25%{\n            transform: translateX(300px);\n        }\n        50%{\n            transform: translate(300px,300px);\n        }\n        75%{\n            transform: translateY(300px);\n        }\n    }\n</style>\n<main>\n    <div></div>\n</main>\n")])])]),a("h3",{attrs:{id:"同时声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同时声明"}},[n._v("#")]),n._v(" 同时声明")]),n._v(" "),a("p",[n._v("时间点和动画样式一样时可以一起声明，下面将25%/75%背景一起声明。")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/2020-05-12_154707.gif",alt:""}})]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<style>\n    * {\n        padding: 0;\n        margin: 0;\n    }\n\n    body {\n        background: #2c3e50;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        box-sizing: border-box;\n        width: 100vw;\n        height: 100vh;\n        padding: 80px;\n    }\n\n    main {\n        width: 400px;\n        height: 400px;\n        border: solid 1px silver;\n    }\n\n    div {\n        width: 100px;\n        height: 100px;\n        background-color:#FF9966;\n        animation-name: laot;\n        animation-duration: 2s;\n    }\n    @keyframes laot{\n        25%{\n            transform: translateX(300px);\n        }\n        50%{\n            transform: translate(300px,300px);\n        }\n        75%{\n            transform: translateY(300px);\n        }\n        25%,75%{\n            background: #996699;\n            border-radius: 50%;\n        }\n    }\n</style>\n")])])]),a("h2",{attrs:{id:"使用动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用动画"}},[n._v("#")]),n._v(" 使用动画")]),n._v(" "),a("p",[n._v("使用"),a("code",[n._v("animation-name")]),n._v("规则可以在元素身上同时使用多个动画。")]),n._v(" "),a("ul",[a("li",[n._v("使用多个动画时用逗号分隔")]),n._v(" "),a("li",[n._v("多个动画由相同属性时，后面动画的属性优先使用。")])]),n._v(" "),a("h3",{attrs:{id:"基本使用-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本使用-2"}},[n._v("#")]),n._v(" 基本使用")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/2020-05-12_155403.gif",alt:""}})]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<style>\n    * {\n        padding: 0;\n        margin: 0;\n    }\n\n    body {\n        background: #2c3e50;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        box-sizing: border-box;\n        width: 100vw;\n        height: 100vh;\n        padding: 80px;\n    }\n\n    main {\n        width: 400px;\n        height: 400px;\n        border: solid 1px silver;\n    }\n\n    div {\n        width: 100px;\n        height: 100px;\n        background-color:#FF9966;\n        animation-name: laot,radius;\n        animation-duration: 2s;\n    }\n    @keyframes laot{\n        25%{\n            transform: translateX(300px);\n        }\n        50%{\n            transform: translate(300px,300px);\n        }\n        75%{\n            transform: translateY(300px);\n        }\n        25%,75%{\n            background: #996699;\n        }\n    }\n    @keyframes radius{\n        25%{\n            border-radius: 50%;\n        }\n        50%{\n            border-radius: 0;\n        }\n        75%{\n            border-radius: 50%;\n        }\n    }\n</style>\n")])])]),a("h2",{attrs:{id:"动画时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动画时间"}},[n._v("#")]),n._v(" 动画时间")]),n._v(" "),a("p",[n._v("使用"),a("code",[n._v("animation-duration")]),n._v("可以声明动画播放的时间，即把所有帧执行一遍所需要的时间。")]),n._v(" "),a("ul",[a("li",[n._v("可以使用m秒，ms毫秒时间单位")]),n._v(" "),a("li",[n._v("可为不同动画单独设置执行时间")]),n._v(" "),a("li",[n._v("如果动画数量大于时间数量，将重新从时间列表中计算")])]),n._v(" "),a("h3",{attrs:{id:"炫彩背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#炫彩背景"}},[n._v("#")]),n._v(" 炫彩背景")]),n._v(" "),a("p",[n._v("下面实例声明三个动画，使用"),a("code",[n._v("animation-duration")]),n._v("为每个动画设置不同执行的时间。")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/2020-05-12_160310.gif",alt:""}})]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<style>\n    main {\n        background: #34495e;\n        animation-name: scale, colors, rotate;\n        animation-duration: 1s, 3s, 1s;\n        animation-fill-mode: forwards;\n    }\n\n    @keyframes scale {\n        from {\n            width: 0;\n            height: 0;\n        }\n\n        to {\n            width: 100vw;\n            height: 100vh;\n        }\n    }\n\n    @keyframes colors {\n        0% {\n            background: #e67e22;\n        }\n\n        50% {\n            background: #34495e;\n        }\n\n        100% {\n            background: #16a085;\n        }\n    }\n\n    @keyframes rotate {\n        0% {\n            transform: rotate(0deg);\n        }\n\n        50% {\n            transform: rotate(180deg);\n        }\n\n        100% {\n            transform: rotate(360deg);\n        }\n    }\n</style>\n<body>\n    <main></main>\n</body>\n")])])]),a("h2",{attrs:{id:"动画属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动画属性"}},[n._v("#")]),n._v(" 动画属性")]),n._v(" "),a("p",[n._v("不是所有CSS属性都有过渡效果，"),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_animated_properties",target:"_blank",rel:"noopener noreferrer"}},[n._v("查看支持动画的CSS属性"),a("OutboundLink")],1),n._v("，一般来讲有中间值的属性都可以设置动画如宽度、透明度等。")]),n._v(" "),a("h3",{attrs:{id:"属性体验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性体验"}},[n._v("#")]),n._v(" 属性体验")]),n._v(" "),a("p",[n._v("下例中的边框变化没有中间值，所以是瞬间改变也没有产生动画效果。")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/2020-05-12_160854.gif",alt:""}})]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<style>\n    * {\n        padding: 0;\n        margin: 0;\n    }\n\n    h2 {\n        color: #f39c12;\n    }\n\n    body {\n        width: 100vw;\n        height: 100vh;\n        background: #34495e;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n    }\n\n    main {\n        width: 100px;\n        height: 100px;\n        background: white;\n        animation-name: laot;\n        animation-duration: 2s;\n    }\n\n    @keyframes laot {\n        0% {\n            background: #9b59b6;\n            border: solid 10px #000;\n        }\n\n        100% {\n            width: 200px;\n            height: 200px;\n            background: #e74c3c;\n            border: double 10px #000;\n        }\n    }\n</style>\n<body>\n    <main>\n    </main>\n</body>\n")])])]),a("h3",{attrs:{id:"中间值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#中间值"}},[n._v("#")]),n._v(" 中间值")]),n._v(" "),a("p",[n._v("下面例子是尺寸没有产生动画，因为"),a("code",[n._v("0%")]),n._v("帧设置的尺寸单位与"),a("code",[n._v("100%")]),n._v("设置的尺寸没有中间值，解析器没有办法计算，最终效果如下：")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/2020-05-12_161419.gif",alt:""}})]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<head>\n    <style>\n        * {\n            padding: 0;\n            margin: 0;\n        }\n\n        body {\n            width: 100vw;\n            height: 100vh;\n            background: #34495e;\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            align-items: center;\n        }\n\n        main {\n            width: 100px;\n            height: 100px;\n            background: white;\n            animation-name: laot;\n            animation-duration: 2s;\n        }\n\n        @keyframes laot {\n            0% {\n                width: auto;\n                height: auto;\n                background: #9b59b6;\n            }\n\n            100% {\n                width: 200px;\n                height: 200px;\n                background: #e74c3c;\n            }\n        }\n    </style>\n</head>\n\n<body>\n    <main></main>\n</body>\n")])])]),a("h2",{attrs:{id:"重复动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重复动画"}},[n._v("#")]),n._v(" 重复动画")]),n._v(" "),a("p",[n._v("使用"),a("code",[n._v("animation-iteration-count")]),n._v("规则设置动画重复执行次数，设置值为"),a("code",[n._v("infinte")]),n._v("表示无限循环执行。")]),n._v(" "),a("ul",[a("li",[n._v("可同时设置元素的多个动画重复，使用逗号分隔")]),n._v(" "),a("li",[n._v("如果动画数量大于重复数量定义，后面的动画将重新计算重复")])]),n._v(" "),a("h3",{attrs:{id:"心动感觉"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#心动感觉"}},[n._v("#")]),n._v(" 心动感觉")]),n._v(" "),a("p",[n._v("下面是画心的步骤")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/2020-05-12_162740.jpg",alt:""}})]),n._v(" "),a("p",[n._v("使用循环动画绘制心动效果。")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/2020-05-12_165314.gif",alt:""}})]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<style>\n    * {\n        padding: 0;\n        margin: 0;\n    }\n\n    body {\n        width: 100vw;\n        height: 100vh;\n        background: #34495e;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n    }\n\n    main {\n        width: 100px;\n        height: 100px;\n        background: red;\n        position: relative;\n        transform: rotateZ(45deg);\n        opacity: .3;\n        animation-duration: 1s;\n        animation-name: laot;\n        animation-iteration-count: infinite;\n    }\n\n    main::before{\n        content: '';\n        position: absolute;\n        width: 100px;\n        height: 100px;\n        background: red;\n        border-radius: 50%;\n        transform: translateX(-50px);\n    }\n    main::after{\n        content: '';\n        position: absolute;\n        width: 100px;\n        height: 100px;\n        background: red;\n        border-radius: 50%;\n        transform: translateY(-50px);\n    }\n    @keyframes laot {\n        50%{\n            opacity: 1;\n            transform: rotateZ(45deg) scale(1.5);\n        }\n    }\n</style>\n<main>\n</main>\n")])])]),a("h2",{attrs:{id:"动画方向"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动画方向"}},[n._v("#")]),n._v(" 动画方向")]),n._v(" "),a("p",[n._v("使用"),a("code",[n._v("animation-direction")]),n._v("控制动画运行的方向。")]),n._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[n._v("选项")]),n._v(" "),a("th",{staticStyle:{"text-align":"left"}},[n._v("说明")])])]),n._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("normal")]),n._v(" "),a("td",{staticStyle:{"text-align":"left"}},[n._v("从0%到100%运行动画")])]),n._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("reverse")]),n._v(" "),a("td",{staticStyle:{"text-align":"left"}},[n._v("从100%到0%运行动画")])]),n._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("alternate")]),n._v(" "),a("td",{staticStyle:{"text-align":"left"}},[n._v("先从0%到100%，然后从100%到0%")])]),n._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("alternate-reverse")]),n._v(" "),a("td",{staticStyle:{"text-align":"left"}},[n._v("先从100%到0%，然后从0%到100%")])])])]),n._v(" "),a("h3",{attrs:{id:"效果比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#效果比较"}},[n._v("#")]),n._v(" 效果比较")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/2020-05-12_170315.gif",alt:""}})]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<style>\n    * {\n        padding: 0;\n        margin: 0;\n    }\n\n    body {\n        width: 100vw;\n        height: 100vh;\n        background: #34495e;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n    }\n\n    ul {\n        width: 400px;\n        height: 100px;\n        display: flex;\n    }\n\n    li {\n        list-style: none;\n        text-align: center;\n        display: flex;\n        flex-direction: column;\n        flex: 1;\n        justify-content: space-between;\n    }\n\n    li span {\n        font-size: 10px;\n        color: #ecf0f1;\n    }\n\n    i.fa {\n        font-size: 30px;\n        margin: 5px;\n        color: #e74c3c;\n        animation-name: laot;\n        animation-duration: 2s;\n        animation-iteration-count: infinite;\n    }\n\n    li:nth-child(1)>i.fa {\n        animation-direction: normal;\n    }\n\n    li:nth-child(2)>i.fa {\n        animation-direction: reverse;\n    }\n\n    li:nth-child(3)>i.fa {\n        animation-direction: alternate;\n    }\n\n    li:nth-child(4)>i.fa {\n        animation-direction: alternate-reverse;\n    }\n\n    @keyframes laot {\n        from {}\n\n        to {\n            opacity: 1;\n            transform: scale(3);\n        }\n    }\n</style>\n<ul>\n    <li>\n        <i class="fa fa-heart" aria-hidden="true"></i>\n        <span>normal</span>\n    </li>\n    <li>\n        <i class="fa fa-heart" aria-hidden="true"></i>\n        <span>reverse</span>\n    </li>\n    <li>\n        <i class="fa fa-heart" aria-hidden="true"></i>\n        <span>alternate</span>\n    </li>\n    <li>\n        <i class="fa fa-heart" aria-hidden="true"></i>\n        <span>alternate-reverse</span>\n    </li>\n</ul>\n')])])]),a("h3",{attrs:{id:"reverse"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reverse"}},[n._v("#")]),n._v(" reverse")]),n._v(" "),a("p",[n._v("根据上面的心动例子改变方向为100%-0%。")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/2020-05-12_170638.gif",alt:""}})]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("animation-direction: reverse;\n")])])]),a("h3",{attrs:{id:"alternate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#alternate"}},[n._v("#")]),n._v(" alternate")]),n._v(" "),a("p",[n._v("根据上面的心动例子改变方向为0%-100%然后100%-0%。")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/2020-05-12_170833.gif",alt:""}})]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("animation-direction: alternate;\n")])])]),a("h3",{attrs:{id:"alternate-reverse"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#alternate-reverse"}},[n._v("#")]),n._v(" alternate-reverse")]),n._v(" "),a("p",[n._v("通过使用合适的运动方向"),a("code",[n._v("alternate-reverse")]),n._v("制作跳动的小球")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/2020-05-12_173313.gif",alt:""}})]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<style>\n    * {\n        padding: 0;\n        margin: 0;\n    }\n\n    body {\n        width: 100vw;\n        height: 100vh;\n        background: #CCCCCC;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n    }\n\n    main{\n        width: 400px;\n        height: 400px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n    }\n    div {\n        width: 100px;\n        height: 100px;\n        background: orange;\n        border-radius: 50%;\n        animation-name: move;\n        animation-duration: 1s;\n        animation-direction: alternate-reverse;\n        animation-iteration-count: infinite;\n    }\n    section{\n        width: 150px;\n        height: 30px;\n        background: #000;\n        border-radius: 50%;\n        filter: blur(5px);\n        z-index: -1;\n        animation-name: yin;\n        animation-duration: 1s;\n        animation-direction: alternate-reverse;\n        animation-iteration-count: infinite;\n    }\n\n    @keyframes move{\n        from {\n        }\n        to{\n            transform: translateY(-300px);\n        }\n    }\n    @keyframes yin {\n        from {\n        }\n        to{\n            transform: scale(1.5);\n            opacity: .3;\n            filter: blur(10px);\n        }\n    }\n</style>\n<main>\n    <div></div>\n    <section></section>\n</main>\n")])])]),a("h2",{attrs:{id:"延迟动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#延迟动画"}},[n._v("#")]),n._v(" 延迟动画")]),n._v(" "),a("p",[n._v("使用"),a("code",[n._v("animation-delay")]),n._v("规则定义动画等待多长时间后执行。")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/2020-05-12_180220.gif",alt:""}})]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<style>\n    * {\n        padding: 0;\n        margin: 0;\n    }\n\n    body {\n        width: 100vw;\n        height: 100vh;\n        background: #34495e;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    main{\n        width: 400px;\n        height: 600px;\n        border: solid 1px silver;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        overflow: hidden;\n    }\n    main::before{\n        content: '';\n        width: 360px;\n        height: 200px;\n        background: orange;\n        border-radius: 20px;\n        transform: translateX(-100vw);\n        animation-duration: .5s;\n        animation-name: laot;\n        animation-fill-mode: forwards;\n    }\n    main::after{\n        content: '';\n        width: 360px;\n        height: 200px;\n        background: violet;\n        border-radius: 20px;\n        margin-top: 20px;\n        animation-name: laot;\n        transform: translateX(-100vw);\n        animation-duration: .5s;\n        animation-delay: .5s;\n        animation-fill-mode: forwards;\n    }\n    @keyframes laot {\n        100%{\n            transform: translateX(0);\n        }\n    }\n</style>\n<main></main>\n")])])]),a("h2",{attrs:{id:"动画速率"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动画速率"}},[n._v("#")]),n._v(" 动画速率")]),n._v(" "),a("h3",{attrs:{id:"系统属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统属性"}},[n._v("#")]),n._v(" 系统属性")]),n._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[n._v("值")]),n._v(" "),a("th",{staticStyle:{"text-align":"left"}},[n._v("描述")])])]),n._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("linear")]),n._v(" "),a("td",{staticStyle:{"text-align":"left"}},[n._v("规定以相同速度开始至结束的过渡效果（等于 cubic-bezier(0,0,1,1)）")])]),n._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("ease")]),n._v(" "),a("td",{staticStyle:{"text-align":"left"}},[n._v("开始慢，然后快，慢下来，结束时非常慢（cubic-bezier(0.25,0.1,0.25,1)）")])]),n._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("ease-in")]),n._v(" "),a("td",{staticStyle:{"text-align":"left"}},[n._v("开始慢，结束快（等于 cubic-bezier(0.42,0,1,1)）")])]),n._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("ease-out")]),n._v(" "),a("td",{staticStyle:{"text-align":"left"}},[n._v("开始快，结束慢（等于 cubic-bezier(0,0,0.58,1)）")])]),n._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("ease-in-out")]),n._v(" "),a("td",{staticStyle:{"text-align":"left"}},[n._v("中间快，两边慢（等于 cubic-bezier(0.42,0,0.58,1)）")])]),n._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("cubic-bezier(n,n,n,n)")]),n._v(" "),a("td",{staticStyle:{"text-align":"left"}},[n._v("在 cubic-bezier 函数中定义自己的值")])])])]),n._v(" "),a("ul",[a("li",[n._v("可以在帧中单独定义，将影响当前帧的速率")])]),n._v(" "),a("h3",{attrs:{id:"贝塞尔曲线"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#贝塞尔曲线"}},[n._v("#")]),n._v(" 贝塞尔曲线")]),n._v(" "),a("p",[n._v("需要设置四个值"),a("code",[n._v("cubic-bezier(<x1>, <y1>, <x2>, <y2>)")]),n._v("，来控制曲线速度，可在"),a("a",{attrs:{href:"https://cubic-bezier.com",target:"_blank",rel:"noopener noreferrer"}},[n._v("https://cubic-bezier.com"),a("OutboundLink")],1),n._v("网站在线体验效果。")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/2020-05-12_182544.jpg",alt:""}})]),n._v(" "),a("h3",{attrs:{id:"体验效果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#体验效果"}},[n._v("#")]),n._v(" 体验效果")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/2020-05-12_182832.gif",alt:""}})]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<style>\n    * {\n        padding: 0;\n        margin: 0;\n    }\n\n    body {\n        width: 100vw;\n        height: 100vh;\n        background: #2c3e50;\n        display: grid;\n        grid-template-columns: 1fr;\n    }\n\n    body::before {\n        content: '0x208.cc';\n        color: white;\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform: translateX(-50%);\n        opacity: .5;\n    }\n\n    ul {\n        box-sizing: border-box;\n        list-style: none;\n        display: grid;\n        grid-template-columns: repeat(5, 1fr);\n        grid-gap: 10px;\n        font-size: 3em;\n    }\n\n    li {\n        box-sizing: border-box;\n        background: #e67e22;\n        animation-name: move;\n        animation-duration: 3s;\n        animation-iteration-count: infinite;\n        color: #333333;\n    }\n\n    li:nth-child(1) {\n        animation-timing-function: ease;\n    }\n\n    li:nth-child(2) {\n        animation-timing-function: ease-in;\n    }\n\n    li:nth-child(3) {\n        animation-timing-function: ease-out;\n    }\n\n    li:nth-child(4) {\n        animation-timing-function: ease-in-out;\n    }\n\n    li:nth-child(5) {\n        animation-timing-function: linear;\n    }\n\n    @keyframes move {\n        to {\n            transform: translateY(90vh);\n        }\n    }\n</style>\n<ul>\n    <li>ease</li>\n    <li>ease-in</li>\n    <li>ease-out</li>\n    <li>ease-in-out</li>\n    <li>linear</li>\n</ul>\n")])])]),a("h3",{attrs:{id:"弹跳小球"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#弹跳小球"}},[n._v("#")]),n._v(" 弹跳小球")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/2020-05-12_183827.gif",alt:""}})]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<head>\n    <style>\n        body {\n            width: 100vw;\n            height: 100vh;\n            display: flex;\n            flex-direction: column;\n            justify-content: flex-end;\n            align-items: flex-start;\n            background: #2c3e50;\n        }\n\n        div {\n            position: absolute;\n            width: 100px;\n            height: 100px;\n            left: 30%;\n            top: 0px;\n            transform: translate(0vw, 0);\n            background: radial-gradient(at right top, #f39c12, #d35400);\n            border-radius: 50%;\n            animation-name: jump;\n            animation-duration: 2s;\n            animation-iteration-count: infinite;\n            animation-timing-function: ease-in;\n        }\n\n        div:nth-child(2) {\n            animation-delay: .2s;\n            left: 60%;\n        }\n\n        @keyframes jump {\n            0% {\n                transform: translateY(0);\n                animation-timing-function: ease-in;\n            }\n\n            30% {\n                transform: translateY(10vh);\n                animation-timing-function: ease-in;\n            }\n\n            60% {\n                transform: translateY(40vh);\n                animation-timing-function: ease-in;\n            }\n\n            80% {\n                transform: translateY(60vh);\n                animation-timing-function: ease-in;\n            }\n\n            95% {\n                transform: translateY(75vh);\n                animation-timing-function: ease-in;\n            }\n\n            15%,\n            45%,\n            70%,\n            85%,\n            100% {\n                transform: translateY(80vh);\n                animation-timing-function: ease-out;\n            }\n        }\n    </style>\n</head>\n\n<body>\n    <div></div>\n    <div></div>\n</body>\n")])])]),a("h3",{attrs:{id:"按钮提交"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#按钮提交"}},[n._v("#")]),n._v(" 按钮提交")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/2020-05-12_184221.gif",alt:""}})]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<head>\n    <style>\n        body {\n            width: 100vw;\n            height: 100vh;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            background: #34495e;\n        }\n\n        button {\n            padding: 10px 50px;\n            outline: none;\n            background: #e67e22;\n            font-size: 2em;\n            border: solid 5px white;\n            color: white;\n        }\n\n        button::after {\n            content: \'\';\n            display: inline-block;\n            height: 3px;\n            width: 3px;\n            box-shadow: 3px 0 currentColor, 9px 0 currentColor, 15px 0 currentColor;\n            animation-name: point;\n            animation-duration: 1s;\n            animation-iteration-count: infinite;\n            animation-timing-function: linear;\n            margin-left: 5px;\n        }\n\n        @keyframes point {\n            from {\n                box-shadow: none;\n            }\n\n            30% {\n                box-shadow: 3px 0 currentColor;\n            }\n\n            60% {\n                box-shadow: 3px 0 currentColor, 9px 0 currentColor;\n            }\n\n            90% {\n                box-shadow: 3px 0 currentColor, 9px 0 currentColor, 15px 0 currentColor;\n            }\n        }\n    </style>\n</head>\n\n<body>\n    <button>\n        <i class="fa fa-code" aria-hidden="true"></i>\n        提交\n    </button>\n</body>\n')])])]),a("h2",{attrs:{id:"步进速度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#步进速度"}},[n._v("#")]),n._v(" 步进速度")]),n._v(" "),a("p",[n._v("过渡使用阶梯化呈现，有点像现实生活中的机械舞，下面是把过渡分五步完成。")]),n._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[n._v("选项")]),n._v(" "),a("th",{staticStyle:{"text-align":"left"}},[n._v("说明")])])]),n._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("steps(n,start)")]),n._v(" "),a("td",{staticStyle:{"text-align":"left"}},[n._v("设置n个时间点，第一时间点变化状态")])]),n._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("steps(n,end)")]),n._v(" "),a("td",{staticStyle:{"text-align":"left"}},[n._v("设置n个时间点，第一时间点初始状态")])]),n._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("step-start")]),n._v(" "),a("td",{staticStyle:{"text-align":"left"}},[n._v("等于steps(1,start)，可以理解为从下一步开始")])]),n._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("step-end")]),n._v(" "),a("td",{staticStyle:{"text-align":"left"}},[n._v("等于steps(1,end)，可以理解为从当前步开始")])])])]),n._v(" "),a("h3",{attrs:{id:"steps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#steps"}},[n._v("#")]),n._v(" steps")]),n._v(" "),a("p",[a("code",[n._v("steps(n,start)")]),n._v("可以简单理解为从第二个开始，"),a("code",[n._v("steps(n,end)")]),n._v("从第一个开始。")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/2020-05-12_185701.gif",alt:""}})]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<style>\n    * {\n        padding: 0;\n        margin: 0;\n    }\n\n    body {\n        width: 100vw;\n        height: 100vh;\n        background: #2c3e50;\n        display: grid;\n        /* justify-content: center;\n        align-content: center; */\n    }\n\n    main {\n        justify-self: center;\n        align-self: center;\n        width: 400px;\n        height: 200px;\n        display: grid;\n        grid-template: repeat(2, 1fr)/repeat(4, 1fr);\n    }\n\n    div {\n        background: #f1c40f;\n        text-align: center;\n        position: relative;\n        border-right: solid 1px #2c3e50;\n        border-bottom: solid 1px #2c3e50;\n        box-sizing: border-box;\n    }\n\n    div:nth-child(5)::before {\n        content: 'END';\n        position: absolute;\n        width: 100px;\n        height: 100px;\n        background: #e67e22;\n        left: 0;\n        animation-name: move;\n        animation-duration: 2s;\n        z-index: 2;\n        animation-timing-function: steps(4, end);\n        animation-iteration-count: infinite;\n    }\n\n    div:nth-child(1)::after {\n        content: 'START';\n        position: absolute;\n        width: 100px;\n        height: 100px;\n        background: #9b59b6;\n        animation-name: move;\n        animation-duration: 2s;\n        animation-timing-function: steps(4, start);\n        animation-iteration-count: infinite;\n        z-index: 2;\n        left: 0;\n        top: 0;\n    }\n\n    @keyframes move {\n        to {\n            transform: translateX(400px);\n        }\n    }\n</style>\n<main>\n    <div>1</div>\n    <div>2</div>\n    <div>3</div>\n    <div>4</div>\n    <div>5</div>\n    <div>6</div>\n    <div>7</div>\n    <div>8</div>\n</main>\n")])])]),a("h3",{attrs:{id:"step-start"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#step-start"}},[n._v("#")]),n._v(" step-start")]),n._v(" "),a("p",[a("code",[n._v("step-start")]),n._v("效果等于"),a("code",[n._v("steps(1,start)")]),n._v("，"),a("code",[n._v("step-end")]),n._v("效果等同于"),a("code",[n._v("steps(1,end)")]),n._v("。")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/2020-05-12_190001.gif",alt:""}})]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<style>\n    * {\n        padding: 0;\n        margin: 0;\n    }\n\n    body {\n        width: 100vw;\n        height: 100vh;\n        background: #2c3e50;\n        display: grid;\n    }\n\n    main {\n        align-self: center;\n        justify-self: center;\n        width: 400px;\n        height: 200px;\n        display: grid;\n        grid-template: repeat(2, 1fr)/repeat(4, 1fr);\n    }\n\n    div {\n        text-align: center;\n        background: #f1c40f;\n        border: solid 1px #2c3e50;\n        box-sizing: border-box;\n        position: relative;\n    }\n\n    div:nth-child(1)::before,\n    div:nth-child(5)::before {\n        animation-name: laot;\n        animation-iteration-count: infinite;\n        animation-duration: .5s;\n        z-index: 2;\n    }\n\n    div:nth-child(1)::before {\n        content: 'START';\n        width: 100px;\n        height: 100px;\n        background: #8e44ad;\n        position: absolute;\n        left: 0;\n        top: 0;\n        animation-timing-function: step-start;\n    }\n\n    div:nth-child(5)::before {\n        content: 'END';\n        width: 100px;\n        height: 100px;\n        background: #27ae60;\n        position: absolute;\n        left: 0;\n        top: 0;\n        animation-timing-function: step-end;\n    }\n\n    @keyframes laot {\n        50% {\n            transform: translateX(100px);\n        }\n\n        to {\n            transform: translateX(0px);\n        }\n    }\n</style>\n <main>\n    <div>1</div>\n    <div>2</div>\n    <div>3</div>\n    <div>4</div>\n    <div>5</div>\n    <div>6</div>\n    <div>7</div>\n    <div>8</div>\n</main>\n")])])]),a("h2",{attrs:{id:"播放状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#播放状态"}},[n._v("#")]),n._v(" 播放状态")]),n._v(" "),a("p",[n._v("使用"),a("code",[n._v("animation-play-state")]),n._v("可以控制动画的暂停与运行。")]),n._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[n._v("选项")]),n._v(" "),a("th",{staticStyle:{"text-align":"left"}},[n._v("说明")])])]),n._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("paused")]),n._v(" "),a("td",{staticStyle:{"text-align":"left"}},[n._v("暂停")])]),n._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("running")]),n._v(" "),a("td",{staticStyle:{"text-align":"left"}},[n._v("运行")])])])]),n._v(" "),a("h2",{attrs:{id:"填充模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#填充模式"}},[n._v("#")]),n._v(" 填充模式")]),n._v(" "),a("p",[a("code",[n._v("animation-fill-mode")]),n._v("用于定义动画播放结束后的处理模式，是回到原来状态还是停止在动画结束状态。")]),n._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[n._v("选项")]),n._v(" "),a("th",{staticStyle:{"text-align":"left"}},[n._v("说明")])])]),n._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("none")]),n._v(" "),a("td",{staticStyle:{"text-align":"left"}},[n._v("需要等延迟结束，起始帧属性才应用")])]),n._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("backwards")]),n._v(" "),a("td",{staticStyle:{"text-align":"left"}},[n._v("动画效果在起始帧，不等延迟结果")])]),n._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("forward")]),n._v(" "),a("td",{staticStyle:{"text-align":"left"}},[n._v("结束后停留动画的最后一帧")])]),n._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[n._v("both")]),n._v(" "),a("td",{staticStyle:{"text-align":"left"}},[n._v("包含backwards与forwards规则，即动画效果在起始帧，不等延迟结束，并且在结束后停止在最后一帧")])])])]),n._v(" "),a("h3",{attrs:{id:"效果对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#效果对比"}},[n._v("#")]),n._v(" 效果对比")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/2020-05-12_220112.gif",alt:""}})]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("<style>\n    * {\n        padding: 0;\n        margin: 0;\n    }\n\n    body {\n        width: 100vw;\n        height: 100vh;\n        background: #34495e;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n    }\n\n    ul {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    li {\n        list-style: none;\n        width: 200px;\n        height: 200px;\n        background: #ecf0f1;\n        border-radius: 50%;\n        animation-name: hd;\n        animation-delay: 2s;\n        animation-duration: 2s;\n        text-align: center;\n        font-size: 2em;\n        line-height: 200px;\n        margin: 10px;\n    }\n\n    li:nth-child(1) {\n        animation-fill-mode: none;\n    }\n\n    li:nth-child(2) {\n        animation-fill-mode: backwards;\n    }\n\n    li:nth-child(3) {\n        animation-fill-mode: forwards;\n    }\n\n    li:nth-child(4) {\n        animation-fill-mode: both;\n    }\n\n    @keyframes hd {\n        0% {\n            border-radius: 0;\n            background: #9b59b6;\n        }\n\n        100% {\n            border-radius: 50%;\n            background: #e74c3c;\n        }\n    }\n</style>\n<ul>\n    <li>none</li>\n    <li>backwards</li>\n    <li>forwards</li>\n    <li>both</li>\n</ul>\n")])])]),a("h2",{attrs:{id:"组合定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组合定义"}},[n._v("#")]),n._v(" 组合定义")]),n._v(" "),a("p",[n._v("和CSS中的其他属性一样，可以使用"),a("code",[n._v("animation")]),n._v("组合定义帧动画。animation属性是一个简写属性，用于设置六个动画属性：")]),n._v(" "),a("ul",[a("li",[n._v("animation-name")]),n._v(" "),a("li",[n._v("animation-duration")]),n._v(" "),a("li",[n._v("animation-timing-function")]),n._v(" "),a("li",[n._v("animation-delay")]),n._v(" "),a("li",[n._v("animation-iteration-count")]),n._v(" "),a("li",[n._v("animation-direction\n必须存在"),a("code",[n._v("animation-duration")]),n._v("属性，否则过渡时间为0没有动画效果。")])])])}),[],!1,null,null,null);t.default=i.exports}}]);